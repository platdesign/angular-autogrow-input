/*
@project	angular-autogrow-input
@author		Christian Blaschke <mail@platdeisgn.de>
@version	1.0.0
@created	2015-01-26 20:49:29
*/
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.pdAutogrowInput=e()}}(function(){return function e(t,n,o){function i(d,u){if(!n[d]){if(!t[d]){var f="function"==typeof require&&require;if(!u&&f)return f(d,!0);if(r)return r(d,!0);var a=new Error("Cannot find module '"+d+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[d]={exports:{}};t[d][0].call(p.exports,function(e){var n=t[d][1][e];return i(n?n:e)},p,p.exports,e,t,n,o)}return n[d].exports}for(var r="function"==typeof require&&require,d=0;d<o.length;d++)i(o[d]);return i}({1:[function(e,t){"use strict";var n;try{n=angular.module("pd")}catch(o){n=angular.module("pd",[])}t.exports=n,n.directive("pdAutogrowInput",function(){return{restrict:"A",scope:{model:"=ngModel"},link:function(e,t,n){function o(){angular.forEach(["fontFamily","fontSize","fontWeight","fontStyle","letterSpacing","textTransform","wordSpacing","textIndent","boxSizing","borderRightWidth","borderLeftWidth","borderLeftStyle","borderRightStyle","paddingLeft","paddingRight","marginLeft","marginRight"],function(e){r.css(e,t.css(e))}),r.text(t.val()||n.placeholder),t.css("width",r.outerWidth()+1)}var i=angular.element('<div style="position:fixed; top:-999px; left:0;"></div>').appendTo(angular.element("body")),r=angular.element('<span style="white-space:pre;"></span>').appendTo(i),d="none"===t.css("maxWidth")?t.parent().innerWidth():t.css("maxWidth");t.css("minWidth",n.puElasticInputMinwidth||t.css("minWidth")),t.css("maxWidth",n.puElasticInputMaxwidth||d),e.$watch("model",function(){o()}),t.on("keydown keyup focus input propertychange change",function(){o()}),e.$on("pdAutogrowInputUpdate",function(){setTimeout(function(){o()})}),setTimeout(function(){o()})}}})},{}]},{},[1])(1)});